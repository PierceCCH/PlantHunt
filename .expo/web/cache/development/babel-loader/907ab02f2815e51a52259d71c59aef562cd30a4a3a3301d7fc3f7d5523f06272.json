{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState } from \"react\";\nimport { ModelProvider } from \"./src/ModelContext\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CameraView from \"./Views/Camera\";\nimport HomeView from \"./Views/Home\";\nimport BaseHeader from \"./Views/BaseHeader\";\nimport LoginView from \"./Views/Login\";\nimport SignupView from \"./Views/Signup\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LogView from \"./Views/Log\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AdventureView from \"./Views/Adventure\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setLogIn = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isAdventureMode = _useState4[0],\n    setAdventureMode = _useState4[1];\n  var updateAdventureMode = function updateAdventureMode() {\n    console.log(\"switching to Adventure Mode\");\n    setAdventureMode(!isAdventureMode);\n  };\n  var styles = StyleSheet.create({\n    container: {\n      backgroundColor: \"#fff\",\n      paddingTop: 50,\n      borderWidth: 1,\n      borderColor: \"#000\",\n      borderRadius: 10,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 4\n      },\n      shadowOpacity: 0.5,\n      shadowRadius: 4,\n      elevation: 5\n    }\n  });\n  if (!isLoggedIn) {\n    return _jsx(ModelProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Login\",\n          children: [_jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginView,\n            initialParams: {\n              setLogIn: setLogIn\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Signup\",\n            component: SignupView\n          })]\n        })\n      })\n    });\n  }\n  return _jsx(ModelProvider, {\n    children: _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsxs(NavigationContainer, {\n        style: styles.container,\n        children: [_jsx(BaseHeader, {}), isAdventureMode ? _jsx(Stack.Navigator, {\n          children: _jsx(Stack.Screen, {\n            name: \"Adventure Mode\",\n            component: AdventureView\n          })\n        }) : _jsxs(Tab.Navigator, {\n          screenOptions: {\n            tabBarStyle: {\n              backgroundColor: \"green\"\n            }\n          },\n          tabBarOptions: {\n            activeTintColor: \"blue\",\n            inactiveTintColor: \"gray\",\n            labelStyle: {\n              fontSize: 16,\n              fontWeight: \"bold\"\n            },\n            style: {\n              backgroundColor: \"white\"\n            }\n          },\n          initialRouteName: \"Home\",\n          tabBarPosition: \"bottom\",\n          children: [_jsx(Tab.Screen, {\n            name: \"Camera \\uD83D\\uDCF7\",\n            component: CameraView\n          }), _jsx(Tab.Screen, {\n            name: \"Home\",\n            component: HomeView\n          }), _jsx(Tab.Screen, {\n            name: \"Log \\uD83D\\uDCD2\",\n            component: LogView\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","ModelProvider","Dimensions","View","CameraView","HomeView","BaseHeader","LoginView","SignupView","createMaterialTopTabNavigator","NavigationContainer","StyleSheet","LogView","createStackNavigator","AdventureView","jsx","_jsx","jsxs","_jsxs","Tab","Stack","App","_useState","_useState2","_slicedToArray","isLoggedIn","setLogIn","_useState3","_useState4","isAdventureMode","setAdventureMode","updateAdventureMode","console","log","styles","create","container","backgroundColor","paddingTop","borderWidth","borderColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","children","Navigator","initialRouteName","Screen","name","component","initialParams","style","flex","screenOptions","tabBarStyle","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","fontSize","fontWeight","tabBarPosition"],"sources":["/Users/aaron68lee/Documents/Coding-Projects/PlantHunt/App.js"],"sourcesContent":["import { React, useState } from \"react\";\nimport { ModelProvider } from \"./src/ModelContext\";\nimport { Dimensions, View } from \"react-native\";\nimport CameraView from \"./Views/Camera\";\nimport HomeView from \"./Views/Home\";\nimport BaseHeader from \"./Views/BaseHeader\";\nimport LoginView from \"./Views/Login\";\nimport SignupView from \"./Views/Signup\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StyleSheet } from \"react-native\";\nimport LogView from \"./Views/Log\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AdventureView from \"./Views/Adventure\";\n\nconst Tab = createMaterialTopTabNavigator();\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [isLoggedIn, setLogIn] = useState(false);\n  const [isAdventureMode, setAdventureMode] = useState(false);\n\n  const updateAdventureMode = () => {\n    console.log(\"switching to Adventure Mode\");\n    setAdventureMode(!isAdventureMode);\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: \"#fff\",\n      paddingTop: 50,\n      borderWidth: 1,\n      borderColor: \"#000\",\n      borderRadius: 10,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 4,\n      },\n      shadowOpacity: 0.5,\n      shadowRadius: 4,\n      elevation: 5,\n    },\n  });\n\n  if (!isLoggedIn) {\n    return (\n      <ModelProvider>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Login\">\n            <Stack.Screen\n              name=\"Login\"\n              component={LoginView}\n              initialParams={{ setLogIn: setLogIn }}\n            />\n            <Stack.Screen name=\"Signup\" component={SignupView} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </ModelProvider>\n    );\n  }\n  return (\n    <ModelProvider>\n      <View style={{ flex: 1 }}>\n        <NavigationContainer style={styles.container}>\n          <BaseHeader/>\n          {isAdventureMode ? (\n            <Stack.Navigator>\n              <Stack.Screen name=\"Adventure Mode\" component={AdventureView} />\n            </Stack.Navigator>\n          ) : (\n            <Tab.Navigator\n              screenOptions={{ tabBarStyle: { backgroundColor: \"green\" } }}\n              tabBarOptions={{\n                activeTintColor: \"blue\",\n                inactiveTintColor: \"gray\",\n                labelStyle: {\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                },\n                style: {\n                  backgroundColor: \"white\",\n                },\n              }}\n              initialRouteName=\"Home\"\n              tabBarPosition=\"bottom\"\n            >\n              <Tab.Screen name=\"Camera ðŸ“·\" component={CameraView} />\n              <Tab.Screen name=\"Home\" component={HomeView}/>\n              <Tab.Screen name=\"Log ðŸ“’\" component={LogView} />\n              {/* TEMP FOR TESTING PURPOSES */}\n            </Tab.Navigator>\n          )}\n        </NavigationContainer>\n      </View>\n    </ModelProvider>\n  );\n}\n\n// export default function App() {\n//   return (\n//     <View\n//       style={{\n//         width: width,\n//         height: height,\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//       }}\n//     >\n//       <BaseTemplate>\n//         <CameraView />\n//         <HomeView />\n//       </BaseTemplate>\n//     </View>\n//   );\n// }\n\n// //outside return\n// const scrollViewRef = useRef();\n// useEffect(() => {\n//   // Scroll to the rightmost edge of the ScrollView\n//   scrollViewRef.current.scrollToEnd({ animated: false });\n// }, []);\n\n// //in return\n// <ScrollView\n//   ref={scrollViewRef}\n//   snapToInterval={width}\n//   decelerationRate=\"fast\"\n//   onContentSizeChange={(contentWidth, contentHeight) => {\n//     // Set the initial position of the ScrollView to the rightmost edge\n//     scrollViewRef.current.scrollTo({\n//       x: contentWidth - scrollViewRef.current.clientWidth,\n//       animated: false,\n//     });\n//   }}\n//   horizontal\n// >\n//   <BaseTemplate>\n//     <CameraView />\n//     <HomeView />\n//   </BaseTemplate>\n// </ScrollView>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}