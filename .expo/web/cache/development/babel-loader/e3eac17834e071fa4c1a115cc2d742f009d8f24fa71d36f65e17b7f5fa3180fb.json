{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport tailwind from \"tailwind-rn\";\nimport Svg, { Path } from \"react-native-svg\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { decodeJpeg } from \"@tensorflow/tfjs-react-native\";\nimport { Camera } from \"expo-camera\";\nimport { HEIGHT, WIDTH } from \"../src/constants\";\nimport { ModelContext } from \"../src/ModelContext\";\nimport { currUser } from \"./Login.js\";\nimport { logPlant } from \"../src/backend.js\";\nimport { auth, firebaseConfig } from \"../firebase-config.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar foundPlants = [];\nexport default function CameraView() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    photo = _useState2[0],\n    setPhoto = _useState2[1];\n  var _useState3 = useState(\"Waiting for image...\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setStatus = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    result = _useState6[0],\n    setResult = _useState6[1];\n  var _useContext = useContext(ModelContext),\n    model = _useContext.model,\n    loading = _useContext.loading;\n  var cam = useRef();\n  var _useState7 = useState(Camera.Constants.Type.back),\n    _useState8 = _slicedToArray(_useState7, 2),\n    type = _useState8[0],\n    setType = _useState8[1];\n  var _useState9 = useState(\"off\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    flashMode = _useState10[0],\n    setFlashMode = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    camPermitted = _useState12[0],\n    setCamPermitted = _useState12[1];\n  var bgColor = \" bg-gray-100 \";\n  var bgAccent = \" bg-gray-300 \";\n  var textColor = \" text-gray-800 \";\n  var textAccent = \"text-gray-700\";\n  useEffect(function () {\n    var init = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _yield$Camera$request = yield Camera.requestPermissionsAsync(),\n          status = _yield$Camera$request.status;\n        setCamPermitted(status === \"granted\");\n      });\n      return function init() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    init();\n  }, []);\n  useEffect(function () {\n    if (photo) {\n      var predict = function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          setStatus(function () {\n            return \"Initializing...\";\n          });\n          setResult([]);\n          var prediction = yield getPrediction(photo);\n          var arr = [\"Betula lenta\", \"Urtica dioica\", \"Amorpha fruticosa\", \"Ricinus communis\", \"Penstemon digitalis\", \"Metrosideros excelsa\", \"Asplenium bulbiferum\", \"Hydrocotyle bonariensis\", \"Castanea dentata\", \"Callicarpa americana\"];\n          var randomElement = arr[Math.floor(Math.random() * arr.length)];\n          setResult(prediction ? prediction[0] : randomElement);\n          foundPlants.push(randomElement);\n          setStatus(function () {\n            return \"Finished.\";\n          });\n        });\n        return function predict() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      predict();\n    } else {\n      setStatus(\"Waiting for image...\");\n    }\n  }, [photo]);\n  var getPrediction = function () {\n    var _ref3 = _asyncToGenerator(function* (photo) {\n      try {\n        if (!loading) {\n          setStatus(function () {\n            return \"Resizing photo...\";\n          });\n          setStatus(function () {\n            return \"Converting to tensor3D...\";\n          });\n          var imgB64 = yield FileSystem.readAsStringAsync(photo.uri, {\n            encoding: FileSystem.EncodingType.Base64\n          });\n          var imgBuffer = tf.util.encodeString(imgB64, \"base64\").buffer;\n          var raw = new Uint8Array(imgBuffer);\n          var tensor = decodeJpeg(raw);\n          setStatus(function () {\n            return \"Classifying...\";\n          });\n          tensor_reshaped = tf.reshape(tensor, [1, 224, 224, 3]);\n          tensor_float = tf.cast(tensor_reshaped, \"float32\");\n          tensor_normalized = tf.div(tensor_float, 255.0);\n          console.log(\"tensor_float: \", tensor_float);\n          var prediction = yield model.predict(tensor_normalized);\n          return prediction;\n        }\n      } catch (e) {\n        console.log(\"error getting prediction: \", e);\n      }\n    });\n    return function getPrediction(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var pickImage = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      yield ImagePicker.requestCameraPermissionsAsync();\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false,\n        aspect: [1, 1],\n        quality: 1,\n        base64: true\n      });\n      if (!result.cancelled) {\n        setPhoto(result);\n      }\n    });\n    return function pickImage() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var takePhoto = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      yield ImagePicker.requestCameraPermissionsAsync();\n      var result = yield ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false,\n        aspect: [1, 1],\n        quality: 1,\n        base64: true\n      });\n      if (!result.cancelled) {\n        setPhoto(result);\n      }\n    });\n    return function takePhoto() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var capturePhoto = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (cam.current) {\n        var options = {\n          quality: 1,\n          base64: true,\n          skipProcessing: true,\n          onPictureSaved: function () {\n            var _onPictureSaved = _asyncToGenerator(function* (res) {\n              setPhoto(res);\n            });\n            function onPictureSaved(_x2) {\n              return _onPictureSaved.apply(this, arguments);\n            }\n            return onPictureSaved;\n          }()\n        };\n        yield cam.current.takePictureAsync(options);\n      }\n    });\n    return function capturePhoto() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var _handleLogFind = function _handleLogFind() {\n    console.log(\"result: \", result);\n    console.log(\"user id: \" + auth.currentUser.uid);\n    logPlant(auth.currentUser.uid, result);\n  };\n  return _jsx(View, {\n    style: tailwind(\"flex flex-1 \" + bgColor),\n    children: _jsxs(View, {\n      style: tailwind(\"flex flex-1\"),\n      children: [_jsxs(View, {\n        style: [tailwind(\"flex p-2 mt-4\"), {\n          width: WIDTH,\n          height: WIDTH\n        }],\n        children: [photo ? _jsx(Image, {\n          style: tailwind(bgAccent + \" flex flex-1 rounded-xl\"),\n          source: {\n            uri: photo.uri\n          }\n        }) : _jsx(View, {\n          style: tailwind(bgAccent + \" flex flex-1 justify-center overflow-hidden rounded-xl\"),\n          children: camPermitted ? _jsx(Camera, {\n            ref: function ref(_ref7) {\n              return cam.current = _ref7;\n            },\n            style: tailwind(\"absolute inset-0\"),\n            type: type,\n            flashMode: flashMode,\n            ratio: \"1:1\"\n          }) : _jsx(Text, {\n            style: tailwind(textColor + \" text-center\"),\n            children: \"Accept Camera Permission to access\"\n          })\n        }), !loading && _jsxs(View, {\n          style: tailwind(\"absolute bottom-4 inset-x-4 flex flex-row items-center justify-between\"),\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: 0.7,\n            onPress: function onPress() {\n              setFlashMode(flashMode === \"on\" ? \"off\" : \"on\");\n            },\n            children: flashMode === \"on\" ? _jsx(Svg, {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 20 20\",\n              fill: \"currentColor\",\n              style: tailwind(\"h-8 w-8 text-gray-200\"),\n              children: _jsx(Path, {\n                fillRule: \"evenodd\",\n                d: \"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\",\n                clipRule: \"evenodd\"\n              })\n            }) : _jsx(Svg, {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              style: tailwind(\"h-8 w-8 text-gray-200\"),\n              children: _jsx(Path, {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M13 10V3L4 14h7v7l9-11h-7z\"\n              })\n            })\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 0.7,\n            style: [{\n              backgroundColor: \"rgba(16,185,129,0.5)\"\n            }, tailwind(\"rounded-full p-3\")],\n            onPress: function onPress() {\n              if (photo) {\n                setPhoto(null);\n                setResult([]);\n              } else capturePhoto();\n            },\n            children: photo ? _jsx(Svg, {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              style: tailwind(\"h-10 w-10 text-white\"),\n              children: _jsx(Path, {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              })\n            }) : _jsxs(Svg, {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              style: tailwind(\"h-10 w-10 text-white\"),\n              children: [_jsx(Path, {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"\n              }), _jsx(Path, {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"\n              })]\n            })\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 0.7,\n            onPress: pickImage,\n            children: _jsx(Svg, {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              style: tailwind(\"h-8 w-8 text-white\"),\n              children: _jsx(Path, {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n              })\n            })\n          })]\n        })]\n      }), _jsxs(ScrollView, {\n        style: tailwind(\"flex h-2/6 px-4 py-2\"),\n        children: [_jsxs(View, {\n          style: tailwind(\"flex flex-row items-center justify-between\"),\n          children: [_jsxs(View, {\n            style: tailwind(\"flex flex-row\"),\n            children: [_jsxs(Text, {\n              style: tailwind(textColor + \" font-bold text-xs\"),\n              children: [\"Status:\", \" \"]\n            }), _jsx(Text, {\n              style: tailwind(textColor + \" text-xs\"),\n              children: status\n            })]\n          }), _jsxs(View, {\n            style: tailwind(\"flex flex-row items-center\"),\n            children: [_jsx(View, {\n              style: tailwind(\"h-2 w-2 rounded-full \" + (loading ? \" bg-red-500 \" : \" bg-green-500 \"))\n            }), _jsxs(Text, {\n              style: tailwind(textColor + \" font-bold text-xs\"),\n              children: [\" \", \"PlantNet:\", \" \"]\n            }), _jsx(Text, {\n              style: tailwind(textColor + \" text-xs\"),\n              children: !loading ? \"ready\" : \"loading...\"\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            height: HEIGHT * 0.1\n          },\n          children: result.length > 0 ? _jsxs(Text, {\n            style: styles.resultText,\n            children: [\"You found: \", result]\n          }) : _jsx(_Fragment, {})\n        }), _jsx(View, {\n          style: tailwind(\"flex h-2/3 items-center border-solid\"),\n          children: result.length > 0 ? _jsx(Button, {\n            title: \"LOG FIND!\",\n            color: \"green\",\n            onPress: function onPress() {\n              return _handleLogFind();\n            },\n            style: {\n              height: 50,\n              padding: 15\n            }\n          }) : _jsx(_Fragment, {})\n        })]\n      })]\n    })\n  });\n}\nfunction ResultItem(_ref8) {\n  var name = _ref8.name,\n    probability = _ref8.probability,\n    _ref8$color = _ref8.color,\n    color = _ref8$color === void 0 ? \"bg-gray-300\" : _ref8$color,\n    textColor = _ref8.textColor;\n  return _jsxs(View, {\n    style: tailwind(\"flex flex-row \" + color + \" py-2 rounded mt-2 items-center justify-center\"),\n    children: [_jsx(Text, {\n      style: tailwind(textColor + \" px-2 flex w-1/2 text-center border-r border-gray-400\"),\n      children: name\n    }), _jsx(Text, {\n      style: tailwind(textColor + \" px-2 flex w-1/2 text-center\"),\n      children: (probability * 100).toFixed(2) + \"%\"\n    })]\n  });\n}\nvar styles = {\n  resultText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"green\",\n    textAlign: \"center\",\n    margin: 15\n  }\n};\nexport { foundPlants };","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","View","Button","Image","Text","TouchableOpacity","ScrollView","tailwind","Svg","Path","FileSystem","ImagePicker","tf","decodeJpeg","Camera","HEIGHT","WIDTH","ModelContext","currUser","logPlant","auth","firebaseConfig","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","foundPlants","CameraView","_useState","_useState2","_slicedToArray","photo","setPhoto","_useState3","_useState4","status","setStatus","_useState5","_useState6","result","setResult","_useContext","model","loading","cam","_useState7","Constants","Type","back","_useState8","type","setType","_useState9","_useState10","flashMode","setFlashMode","_useState11","_useState12","camPermitted","setCamPermitted","bgColor","bgAccent","textColor","textAccent","init","_ref","_asyncToGenerator","_yield$Camera$request","requestPermissionsAsync","apply","arguments","predict","_ref2","prediction","getPrediction","arr","randomElement","Math","floor","random","length","push","_ref3","imgB64","readAsStringAsync","uri","encoding","EncodingType","Base64","imgBuffer","util","encodeString","buffer","raw","Uint8Array","tensor","tensor_reshaped","reshape","tensor_float","cast","tensor_normalized","div","console","log","e","_x","pickImage","_ref4","requestCameraPermissionsAsync","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","base64","cancelled","takePhoto","_ref5","launchCameraAsync","capturePhoto","_ref6","current","options","skipProcessing","onPictureSaved","_onPictureSaved","res","_x2","takePictureAsync","_handleLogFind","currentUser","uid","style","children","width","height","source","ref","ratio","activeOpacity","onPress","xmlns","viewBox","fill","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","backgroundColor","styles","resultText","title","color","padding","ResultItem","_ref8","name","probability","_ref8$color","toFixed","fontSize","fontWeight","textAlign","margin"],"sources":["/Users/aaron68lee/Documents/Coding-Projects/PlantHunt/Views/Camera.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport {\n  View,\n  Button,\n  Image,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport tailwind from \"tailwind-rn\";\nimport Svg, { Path } from \"react-native-svg\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { decodeJpeg } from \"@tensorflow/tfjs-react-native\";\nimport { Camera } from \"expo-camera\";\nimport { HEIGHT, WIDTH } from \"../src/constants\";\nimport { ModelContext } from \"../src/ModelContext\";\nimport { currUser } from \"./Login.js\";\nimport {logPlant} from \"../src/backend.js\"\n//import \"../assets/aiy_plants_V1_labelmap.csv\"\n\nimport {auth, firebaseConfig} from '../firebase-config.js' // db, auth, provider, app, \nlet foundPlants = [];\n\nexport default function CameraView() {\n  // COMPONENT VARIABLES\n  const [photo, setPhoto] = useState();\n  const [status, setStatus] = useState(\"Waiting for image...\");\n  const [result, setResult] = useState([]);\n  const { model, loading } = useContext(ModelContext);\n\n  // CAMERA VARIABLES\n  const cam = useRef();\n  const [type, setType] = useState(Camera.Constants.Type.back);\n  const [flashMode, setFlashMode] = useState(\"off\");\n  const [camPermitted, setCamPermitted] = useState(null);\n\n  // COLOR VARIABLES\n  const bgColor = \" bg-gray-100 \";\n  const bgAccent = \" bg-gray-300 \";\n  const textColor = \" text-gray-800 \";\n  const textAccent = \"text-gray-700\";\n\n  useEffect(() => {\n    const init = async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setCamPermitted(status === \"granted\");\n    };\n    init();\n  }, []);\n    \n  \n\n  useEffect(() => {\n    if (photo) {\n      const predict = async () => {\n        setStatus(() => \"Initializing...\");\n        setResult([]);\n        const prediction = await getPrediction(photo);\n        const arr = [\n          \"Betula lenta\",\n          \"Urtica dioica\",\n          \"Amorpha fruticosa\",\n          \"Ricinus communis\",\n          \"Penstemon digitalis\",\n          \"Metrosideros excelsa\",\n          \"Asplenium bulbiferum\",\n          \"Hydrocotyle bonariensis\",\n          \"Castanea dentata\",\n          \"Callicarpa americana\"];\n        const randomElement = arr[Math.floor(Math.random() * arr.length)];\n        setResult(prediction ? prediction[0] : randomElement);\n        foundPlants.push(randomElement);\n        setStatus(() => \"Finished.\");\n      };\n      predict();\n    } else {\n      setStatus(\"Waiting for image...\");\n    }\n  }, [photo]);\n\n  const getPrediction = async (photo) => {\n    try {\n      if (!loading) {\n        setStatus(() => \"Resizing photo...\");\n        setStatus(() => \"Converting to tensor3D...\");\n        const imgB64 = await FileSystem.readAsStringAsync(photo.uri, {\n          encoding: FileSystem.EncodingType.Base64,\n        });\n        const imgBuffer = tf.util.encodeString(imgB64, \"base64\").buffer;\n        const raw = new Uint8Array(imgBuffer);\n        const tensor = decodeJpeg(raw);\n\n        setStatus(() => \"Classifying...\");\n        tensor_reshaped = tf.reshape(tensor, [1, 224, 224, 3]);\n        tensor_float = tf.cast(tensor_reshaped, \"float32\");\n        tensor_normalized = tf.div(tensor_float, 255.0);\n        console.log(\"tensor_float: \", tensor_float);\n        let prediction = await model.predict(tensor_normalized);\n        return prediction;\n      }\n    } catch (e) {\n      console.log(\"error getting prediction: \", e);\n    }\n  };\n\n  const pickImage = async () => {\n    await ImagePicker.requestCameraPermissionsAsync();\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      aspect: [1, 1],\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.cancelled) {\n      setPhoto(result);\n    }\n  };\n\n  // ImagePicker\n  const takePhoto = async () => {\n    await ImagePicker.requestCameraPermissionsAsync();\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      aspect: [1, 1],\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.cancelled) {\n      setPhoto(result);\n    }\n  };\n\n  // Expo Cam\n  const capturePhoto = async () => {\n    if (cam.current) {\n      const options = {\n        quality: 1,\n        base64: true,\n        skipProcessing: true,\n        onPictureSaved: async (res) => {\n          setPhoto(res);\n        },\n      };\n      await cam.current.takePictureAsync(options);\n    }\n  };\n\n  const _handleLogFind = () => {\n    console.log(\"result: \", result); // this should add the result to the log\n    console.log(\"user id: \" + auth.currentUser.uid);\n    logPlant(auth.currentUser.uid, result); //auth.currentUser.email, result);\n  }\n\n  return (\n    <View style={tailwind(`flex flex-1 ${bgColor}`)}>\n      {/* Header */}\n\n      {/* Content */}\n      <View style={tailwind(\"flex flex-1\")}>\n        <View\n          style={[tailwind(\"flex p-2 mt-4\"), { width: WIDTH, height: WIDTH }]}\n        >\n          {photo ? (\n            <Image\n              style={tailwind(`${bgAccent} flex flex-1 rounded-xl`)}\n              source={{ uri: photo.uri }}\n            />\n          ) : (\n            <View\n              style={tailwind(\n                `${bgAccent} flex flex-1 justify-center overflow-hidden rounded-xl`\n              )}\n            >\n              {camPermitted ? (\n                <Camera\n                  ref={(ref) => (cam.current = ref)}\n                  style={tailwind(`absolute inset-0`)}\n                  type={type}\n                  flashMode={flashMode}\n                  ratio=\"1:1\"\n                />\n              ) : (\n                <Text style={tailwind(`${textColor} text-center`)}>\n                  Accept Camera Permission to access\n                </Text>\n              )}\n            </View>\n          )}\n\n          {!loading && (\n            <View\n              style={tailwind(\n                \"absolute bottom-4 inset-x-4 flex flex-row items-center justify-between\"\n              )}\n            >\n              <TouchableOpacity\n                activeOpacity={0.7}\n                onPress={() => {\n                  setFlashMode(flashMode === \"on\" ? \"off\" : \"on\");\n                }}\n              >\n                {flashMode === \"on\" ? (\n                  <Svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                    style={tailwind(\"h-8 w-8 text-gray-200\")}\n                  >\n                    <Path\n                      fillRule=\"evenodd\"\n                      d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </Svg>\n                ) : (\n                  <Svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    style={tailwind(\"h-8 w-8 text-gray-200\")}\n                  >\n                    <Path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M13 10V3L4 14h7v7l9-11h-7z\"\n                    />\n                  </Svg>\n                )}\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                activeOpacity={0.7}\n                style={[\n                  { backgroundColor: \"rgba(16,185,129,0.5)\" },\n                  tailwind(\"rounded-full p-3\"),\n                ]}\n                onPress={() => {\n                  if (photo) {\n                    setPhoto(null);\n                    setResult([]);\n                  } else capturePhoto();\n                }}\n              >\n                {photo ? (\n                  <Svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    style={tailwind(\"h-10 w-10 text-white\")}\n                  >\n                    <Path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                    />\n                  </Svg>\n                ) : (\n                  <Svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    style={tailwind(\"h-10 w-10 text-white\")}\n                  >\n                    <Path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"\n                    />\n                    <Path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                  </Svg>\n                )}\n              </TouchableOpacity>\n\n              <TouchableOpacity activeOpacity={0.7} onPress={pickImage}>\n                <Svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  style={tailwind(\"h-8 w-8 text-white\")}\n                >\n                  <Path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n                  />\n                </Svg>\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n\n        <ScrollView style={tailwind(\"flex h-2/6 px-4 py-2\")}>\n          <View style={tailwind(\"flex flex-row items-center justify-between\")}>\n            <View style={tailwind(\"flex flex-row\")}>\n              <Text style={tailwind(`${textColor} font-bold text-xs`)}>\n                Status:{\" \"}\n              </Text>\n              <Text style={tailwind(`${textColor} text-xs`)}>{status}</Text>\n            </View>\n\n            <View style={tailwind(\"flex flex-row items-center\")}>\n              <View\n                style={tailwind(\n                  `h-2 w-2 rounded-full ${\n                    loading ? \" bg-red-500 \" : \" bg-green-500 \"\n                  }`\n                )}\n              />\n              <Text style={tailwind(`${textColor} font-bold text-xs`)}>\n                {\" \"}\n                PlantNet:{\" \"}\n              </Text>\n              <Text style={tailwind(`${textColor} text-xs`)}>\n                {!loading ? \"ready\" : \"loading...\"}\n              </Text>\n            </View>\n          </View>\n          <View style={{height: HEIGHT*0.1}}>\n            {result.length > 0 ? (\n              <Text style={styles.resultText}>\n                You found: {result}\n              </Text>\n            ) : <></>}\n          </View>\n          <View style={tailwind(\"flex h-2/3 items-center border-solid\")}>\n            {result.length > 0 ? (\n              <Button\n                title=\"LOG FIND!\"\n                color=\"green\"\n                onPress={() => _handleLogFind()}\n                style={{height: 50, padding: 15}}\n              ></Button>\n            ) : <></>}\n          </View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction ResultItem({ name, probability, color = \"bg-gray-300\", textColor }) {\n  return (\n    <View\n      style={tailwind(\n        `flex flex-row ${color} py-2 rounded mt-2 items-center justify-center`\n      )}\n    >\n      <Text\n        style={tailwind(\n          `${textColor} px-2 flex w-1/2 text-center border-r border-gray-400`\n        )}\n      >\n        {name}\n      </Text>\n      <Text style={tailwind(`${textColor} px-2 flex w-1/2 text-center`)}>{`${(\n        probability * 100\n      ).toFixed(2)}%`}</Text>\n    </View>\n  );\n}\n\nconst styles = {\n  resultText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"green\",\n    textAlign: \"center\",\n    margin: 15\n  }\n}\n\nexport {\n  foundPlants,\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}