{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { auth, provider } from \"../firebase-config\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { SignIn } from \"../src/backend.js\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport CustomButton from \"../src/components/CustomButton\";\nimport InputField from \"../src/components/InputField\";\nimport { Button } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar currUser;\nvar LoginView = function LoginView(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleLogin = function handleLogin() {\n    console.log(\"Logging in...\");\n    var auth = getAuth();\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      currUser = user;\n      alert(\"Logged In!\");\n      navigation.navigate(\"Home\");\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n    route.params.setLogIn(true);\n  };\n  var handleSignup = function handleSignup() {\n    navigation.navigate(\"Signup\");\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      padding: 5\n    },\n    children: _jsx(ScrollView, {\n      showsVerticalScrollIndicator: true,\n      horizontal: false,\n      style: {\n        paddingHorizontal: 0\n      },\n      children: _jsxs(View, {\n        style: {\n          width: width,\n          height: height,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginHorizontal: 0\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontFamily: \"Roboto-Medium\",\n            fontSize: 28,\n            fontWeight: \"500\",\n            color: \"#333\",\n            marginBottom: 30\n          },\n          children: \"Login\"\n        }), _jsx(Text, {\n          style: {\n            textAlign: \"center\",\n            color: \"#666\",\n            marginBottom: 30\n          },\n          children: \"Welcome to PlantHunt!\"\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(TextInput, {\n            placeholder: \"Email\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            style: styles.input\n          }), _jsx(TextInput, {\n            placeholder: \"Password\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            style: styles.input,\n            secureTextEntry: true\n          })]\n        }), _jsx(CustomButton, {\n          label: \"Login\",\n          onPress: handleLogin\n        }), _jsx(Text, {\n          children: \"Haven't registered?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: handleSignup,\n          children: _jsxs(Text, {\n            style: {\n              color: \"#0d422d\",\n              fontWeight: \"700\"\n            },\n            children: [\" \", \"Sign Up\"]\n          })\n        })]\n      })\n    })\n  });\n};\nexport default LoginView;\nexport { currUser };\nvar styles = StyleSheet.create({\n  container: {\n    width: width,\n    height: height,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 0\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    marginBottom: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","SafeAreaView","ScrollView","View","Text","TextInput","TouchableOpacity","StyleSheet","Dimensions","auth","provider","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","MaterialIcons","Ionicons","SignIn","NavigationContainer","useNavigation","CustomButton","InputField","Button","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","currUser","LoginView","_ref","navigation","route","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleLogin","console","log","then","userCredential","user","alert","navigate","catch","error","errorCode","code","errorMessage","message","params","setLogIn","handleSignup","style","flex","justifyContent","padding","children","showsVerticalScrollIndicator","horizontal","paddingHorizontal","alignItems","marginHorizontal","fontFamily","fontSize","fontWeight","color","marginBottom","textAlign","styles","inputContainer","placeholder","value","onChangeText","text","input","secureTextEntry","label","onPress","create","container","backgroundColor","paddingVertical","borderRadius","marginTop","buttonContainer","button","buttonOutline","borderColor","borderWidth","buttonText","buttonOutlineText"],"sources":["/Users/aaron68lee/Documents/Coding-Projects/PlantHunt/Views/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  SafeAreaView,\n  ScrollView,\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n} from \"react-native\";\nimport { auth, provider } from \"../firebase-config\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"@firebase/auth\";\n\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { SignIn } from \"../src/backend.js\";\nimport { NavigationContainer, useNavigation} from \"@react-navigation/native\";\n\n// import LoginSVG from '../assets/images/misc/login.svg'\n// import GoogleSVG from '../assets/images/misc/google.svg';\n// import FacebookSVG from '../assets/images/misc/facebook.svg';\n// import TwitterSVG from '../assets/images/misc/twitter.svg';\n\nimport CustomButton from \"../src/components/CustomButton\";\nimport InputField from \"../src/components/InputField\";\nimport { Button } from \"react-native-paper\";\n\nconst { width, height } = Dimensions.get(\"window\");\nlet currUser;\n\nconst LoginView = ({ navigation, route }) => {\n  // State variables for the user's name, email, and password\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Function to handle sign-up button press\n  const handleLogin = () => {\n    console.log(\"Logging in...\");\n    \n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        currUser = user;\n        alert(\"Logged In!\")\n        navigation.navigate(\"Home\"); \n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n      route.params.setLogIn(true);\n  };\n\n  const handleSignup = () => {\n    navigation.navigate(\"Signup\");\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1, justifyContent: \"center\", padding: 5 }}>\n      <ScrollView\n        showsVerticalScrollIndicator={true}\n        horizontal={false}\n        style={{ paddingHorizontal: 0 }}\n      >\n        <View\n          style={{\n            width: width,\n            height: height,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginHorizontal: 0,\n          }}\n        >\n          <Text\n            style={{\n              fontFamily: \"Roboto-Medium\",\n              fontSize: 28,\n              fontWeight: \"500\",\n              color: \"#333\",\n              marginBottom: 30,\n            }}\n            \n          >\n            Login\n          </Text>\n\n          <Text\n            style={{ textAlign: \"center\", color: \"#666\", marginBottom: 30 }}\n          >\n            Welcome to PlantHunt!\n          </Text>\n\n          <View style={styles.inputContainer}>\n            <TextInput\n              placeholder=\"Email\"\n              value={email}\n              onChangeText={text => setEmail(text)}\n              style={styles.input}\n            />\n            <TextInput\n              placeholder=\"Password\"\n              value={password}\n              onChangeText={text => setPassword(text)}\n              style={styles.input}\n              secureTextEntry\n            />\n          </View>\n\n          <CustomButton label={\"Login\"} onPress={handleLogin} />\n\n          <Text>Haven't registered?</Text>\n          <TouchableOpacity onPress={handleSignup}>\n            <Text style={{ color: \"#0d422d\", fontWeight: \"700\" }}>\n              {\" \"}\n              Sign Up\n            </Text>\n          </TouchableOpacity>\n\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default LoginView;\n\nexport {\n  currUser,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: width,\n    height: height,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 0,\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}